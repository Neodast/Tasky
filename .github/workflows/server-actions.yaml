on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install
        working-directory: ./server

      # - name: Wait for PostgreSQL to be ready
      #   run: |
      #     until pg_isready -h 127.0.0.1 -U user -d test; do
      #       echo "Waiting for PostgreSQL to be ready..."
      #       sleep 1
      #     done

      # - name: Generate
      #   run: npx drizzle-kit generate
      #   working-directory: ./backend

      # - name: Migrate
      #   run: npx drizzle-kit migrate
      #   working-directory: ./backend

      # - name: Seed the Database
      #   run: npm run db:seed
      #   working-directory: ./backend

      - name: Run lint
        run: npm run lint
        working-directory: ./backend

      # - name: Run unit tests
      #   env:
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
      #   run: npm run test
      #   working-directory: ./backend

      # - name: Run e2e tests
      #   env:
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
      #   run: npm run test:e2e
      #   working-directory: ./backend

  build:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        node-version: [18]

    # services:
    #   postgres:
    #     image: postgres:latest
    #     env:
    #       POSTGRES_USER: ${{ secrets.DATABASE_USER}}
    #       POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD}}
    #       POSTGRES_DB: ${{ secrets.DATABASE_NAME}}
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
        working-directory: ./server

      - name: Build project
        run: npm run build
        working-directory: ./server

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage-report
          path: server/coverage
